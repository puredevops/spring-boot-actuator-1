name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
#     env:
      
#       GITHUB_TOKEN: ${{ secrets.TOKEN }}
#       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
      
    steps:
    - uses: actions/checkout@v2 

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Gradle packages
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./gradlew build sonarqube --info

#     - name: Trigger next workflow
#         if: success()
#         uses: peter-evans/repository-dispatch@v1
#         with:
#           token: ${{ secrets.TOKEN }}
#           repository: puredevops/spring-boot-actuator
#           event-type: windows
#           client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
          
#     - name: Set final status
#         if: failure()
#         uses: peter-evans/repository-dispatch@v1
#         with:
#           token: ${{ secrets.TOKEN }}
#           repository: puredevops/spring-boot-actuator
#           event-type: final
#           client-payload: '{"success": false}'

